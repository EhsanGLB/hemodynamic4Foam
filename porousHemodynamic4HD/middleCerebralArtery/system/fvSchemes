/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default				Euler;//steadyState;
}

gradSchemes
{
    default				Gauss linear;
    grad(p)				leastSquares;//Gauss linear;
    grad(U)				Gauss linear;
}

divSchemes
{
    default				none;
    div(phi,U)				Gauss linearUpwind grad(U);//Gauss limitedLinearV 1;
    div(phi,k)				Gauss limitedLinear 1;
    div(phi,epsilon)			Gauss limitedLinear 1;
    div(phi,R)				Gauss limitedLinear 1;
    div(R)				Gauss linear;
    div(phi,nuTilda)			Gauss limitedLinear 1;
    div((nuEff*dev(T(grad(U)))))	Gauss linear;
    div(phi,H)				Gauss linearUpwind grad(U);
    div(phi,T)				Gauss upwind;
    div(phi,C)				Gauss upwind;
}

laplacianSchemes
{
    default				Gauss linear corrected;
    laplacian(nuEff,U)			Gauss linear corrected;
    laplacian(rAU,p)			Gauss linear corrected;
    laplacian(DkEff,k)			Gauss linear corrected;
    laplacian(DepsilonEff,epsilon)	Gauss linear corrected;
    laplacian(DREff,R)			Gauss linear corrected;
    laplacian(DnuTildaEff,nuTilda)	Gauss linear corrected;
}

interpolationSchemes
{
    default				linear;//linear corrected;
    interpolate(U)			linear;
}

snGradSchemes
{
    default 				corrected;
}


// ************************************************************************* //
